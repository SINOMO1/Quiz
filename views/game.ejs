<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quiz - Play</title>
    <link rel="stylesheet" href="/styles/game.css">
</head>
<body>
    <div class="container">
        <div id="game" class="flex">
            <div class="head">
                <div class="sub-head">
                    <p class="q-no"></p>
                    <div class="progress-bar">
                        <div class="bar"></div>
                    </div>
                </div>
                <div class="sub-head">
                    <p class="score">Score</p>
                    <h1 class="score-no"></h1>
                </div>
            </div>
            <h2 class="question" id="question">What is theanswerto this question?</h2>
            <div class="choice-con">
                <p class="c-pref">A</p>
                <p class="c-text" data-number="1">Choice 1</p>
            </div>
            <div class="choice-con">
                <p class="c-pref">B</p>
                <p class="c-text" data-number="2">Choice 2</p>
            </div>
            <div class="choice-con">
                <p class="c-pref">C</p>
                <p class="c-text" data-number="3">Choice 3</p>
            </div>
            <div class="choice-con">
                <p class="c-pref">D</p>
                <p class="c-text" data-number="4">Choice 4</p>
            </div>
        </div>
    </div>


    <script type="module">


        const question = document.querySelector(".question");
const choices = Array.from(document.querySelectorAll(".c-text"));
const questionCounterText = document.querySelector(".q-no");
const scoreText = document.querySelector(".score-no");
const bar = document.querySelector(".bar");
console.log(choices);

let currentQuestion = {};
let acceptingAnswers = false;
let score = 0;
let questionCounter = 0;
let availableQuesions = [];

let questions = [
{
        question: "Inside which HTML element do we put the JavaScript??",
        choice1: "<script>",
        choice2: "<javascript>",
        choice3: "<js>",
        choice4: "<scripting>",
        answer: "1"
      },
      {
        question: "What is the correct syntax for referring to an external script called 'xxx.js'?",
        choice1: "<script href='xxx.js'>",
        choice2: "<script name='xxx.js'>",
        choice3: "<script src='xxx.js'>",
        choice4: "<script file='xxx.js'>",
        answer: "3"
      },
      {
        question: " How do you write 'Hello World' in an alert box?",
        choice1: "msgBox('Hello World');",
        choice2: "alertBox('Hello World');",
        choice3: "msg('Hello World');",
        choice4: "alert('Hello World');",
        answer: "4"
      },
    {
        question: "How do you change this variable to Lagos? let city = 'Abuja'",
        choice1: "let city = 'Lagos'",
        choice2: "const city = 'Lagos'",
        choice3: "city = 'Lagos'",
        choice4: "none",
        answer: "3"
    },
    {
        question: "How do you change this variable to Lagos? const city = 'Abuja'",
        choice1: "let city = 'Lagos'",
        choice2: "const city = 'Lagos'",
        choice3: "city = 'Lagos'",
        choice4: "none",
        answer: "4"
    },
    {
        question: "You have placed an image in a directory named images and want to reference it from a page located in the root of your site. Which choice would correctly display the image on the page?",
        choice1: "< img src='image.jpg'>",
        choice2: "< a href='images/image.jpg'>",
        choice3: "< img src='images/image.jpg'>",
        choice4: "< img href='image.jpg'>",
        answer: "3"
    },
    {
        question: "Which choice is not a value of the type attribute of the <input> element?",
        choice1: "range",
        choice2: "address",
        choice3: "date",
        choice4: "password",
        answer: "2"
    },
    {
        question: "Which choice is a correct use of the parseInt() function in JavaScript that parses a string and return an integer?",
        choice1: "parseInt('six');",
        choice2: "parse_int('6');",
        choice3: "parseInt('6');",
        choice4: "parseint('6');",
        answer: "3"
    },
    {
        question: "Which choice is not part of CSS box model",
        choice1: "paragraph",
        choice2: "margin",
        choice3: "border",
        choice4: "padding",
        answer: "1"
    },
    {
        question: "What will this loop print? Captionless    let max = 3; for(i=0; i>max; i++) {document.write('skirt');}",
        choice1: "skrt skrt skrt",
        choice2: "skrt skrt",
        choice3: "skrt skrt skrt skrt",
        choice4: "nothing",
        answer: "4"
    }
];





//CONSTANTS 

const correctPoint = 10;
const maxQuestions = 10;
 const startGame = () => {
    questionCounter = 0;
    score = 0;
    availableQuesions = [...questions];
    getNewQuestion();
};


 const getNewQuestion = () => {
    if(availableQuesions.length === 0 || questionCounter > maxQuestions) {
        // go to end page
        localStorage.setItem("mostRecentScore", score);
        return window.location.assign("/end.html");
    }
    questionCounter++;
    const questionNumber = Math.floor(Math.random() * availableQuesions.length);
    currentQuestion = availableQuesions[questionNumber];
    question.innerText = currentQuestion.question;
    scoreText.innerText = score;
    
    choices.forEach(element => {
        const questionIndex = element.dataset["number"];
        element.innerText = currentQuestion["choice" + questionIndex];
    });

    availableQuesions.splice(questionNumber, 1);

    acceptingAnswers = true;
    questionCounterText.innerText = `Question: ${questionCounter}/${maxQuestions}`;
    bar.style.width = `${(questionCounter / maxQuestions) * 100}%`
};

choices.forEach(choice => {
    choice.addEventListener("click", (e) => {
        if (!acceptingAnswers) return;

        acceptingAnswers = false;
        const selectedChoice = e.target;
        const selectedAnswer = parseInt(selectedChoice.dataset["number"]);

        const correctAns = parseInt(currentQuestion.answer);
        
        const classToApply = selectedAnswer === correctAns? "correct" : "incorrect";
        console.log(classToApply);

        selectedChoice.parentElement.classList.add(classToApply);
        
        if (selectedAnswer === correctAns) {
            score += correctPoint;
            scoreText.innerText = score;
        };
        setTimeout(() => {
            selectedChoice.parentElement.classList.remove(classToApply);
            getNewQuestion();
        }, 1000);

    })
});

startGame();
    </script>
    <!-- <script src="app.js"></script> -->
</body>
</html>